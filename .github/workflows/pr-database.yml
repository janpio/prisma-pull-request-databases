name: Database for PR
on:
  push:

jobs:
  migrate-db:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: jwalton/gh-find-current-pr@v1
        id: findPr

      - run: echo "Your PR is ${PR}"
        if: success() && steps.findPr.outputs.number
        env:
          PR: ${{ steps.findPr.outputs.pr }}

      - name: manipulate DATABASE_URL
        id: manipulateUrl
        run: |
          echo ::set-output name=url::"${DATABASE_URL/defaultdb/${{ steps.findPr.outputs.pr }}}"
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          
      - run: echo $DATABASE_URL
        env:
          DATABASE_URL: ${{ steps.manipulateUrl.outputs.url }}

      - run: npx prisma db push --skip-generate --preview-feature
        env:
          DATABASE_URL: ${{ steps.manipulateUrl.outputs.url }}

      - run: npx prisma studio &
        env:
          DATABASE_URL: ${{ steps.manipulateUrl.outputs.url }}

      - run: wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
        shell: bash
      - run: unzip -qq ngrok-stable-linux-amd64.zip
        shell: bash
      - run: ./ngrok authtoken ${{ secrets.NGROK_AUTHTOKEN }}
        shell: bash
      - run: timeout 1h ./ngrok http 5555
        shell: bash